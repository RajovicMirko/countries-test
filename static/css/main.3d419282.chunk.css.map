{"version":3,"sources":["main.3d419282.chunk.css","webpack://src/scss/index.scss","webpack://src/components/Layout/Layout.scss","webpack://src/scss/_breakpoints.scss","webpack://src/components/Layout/NavBar/NavBar.scss","webpack://src/components/global/Button/Flat/Flat.scss","webpack://src/components/global/Icon/Icon.scss","webpack://src/app/pages/Countries/Countries.scss","webpack://src/components/Countries/ControlesHeader/ControlesHeader.scss","webpack://src/components/global/effects/HoverBox/HoverBox.scss","webpack://src/components/global/Input/Text/Text.scss","webpack://src/components/global/Select/Select.scss","webpack://src/components/Countries/Card/Card.scss","webpack://src/components/Countries/DescriptionCard/DescriptionCard.scss","webpack://src/components/global/effects/Scale/Scale.scss","webpack://src/components/global/Loading/Loading.scss","webpack://src/components/global/NoData/NoData.scss","webpack://src/app/pages/Country/Country.scss","webpack://src/components/global/Button/Strech/Strech.scss","webpack://src/components/Countries/Description/Description.scss"],"names":[],"mappings":"AAAA,+FAA+F,CCE/F,MASE,2BAAwB,CACxB,yBAAsB,CACvB,gBAKC,iBAAkB,CAClB,gBAAiB,CAClB,KAGC,QAAS,CACT,SAAU,CACV,oCAAsC,CACtC,kCAAmC,CACnC,iCAAkC,CCzBpC,QACE,iBAAkB,CAClB,kBAAmB,CACnB,YAAa,CACb,wCAA0C,CAC1C,wCAA0C,CAL5C,eAQI,wCAAyC,CAa1C,yBArBH,eAWM,cAAe,CAUlB,CCwFD,yBD7GF,eAeM,cAAe,CAMlB,CCwFD,yBD7GF,eAmBM,aAAc,CAEjB,CArBH,aAwBI,gCAAiC,CACjC,uBAAwB,CAazB,yBAtCH,aA4BM,cAAe,CAUlB,CCuED,yBD7GF,aAgCM,cAAe,CAMlB,CCuED,yBD7GF,aAoCM,aAAc,CAEjB,CExCH,SACE,WAAY,CACZ,UAAW,CACX,YAAa,CACb,6BAA8B,CAC9B,kBAAmB,CALrB,sBASM,eAGe,CCZrB,mCDUM,eAAiB,CACjB,uBAAwB,CACxB,cCDoB,CAX1B,aACE,eAAgB,CAChB,WAAY,CACZ,YAAa,CAEb,YAAa,CACb,kBAAmB,CACnB,6BAIwB,CAX1B,eAcI,kBAAoB,CCdxB,EACE,cAAe,CACf,QAAS,CACT,SAAU,CCDZ,WACE,iBAAkB,CAClB,YAAa,CACb,2BAA4B,CAH9B,kBAMI,YAAa,CACb,eAAgB,CAChB,6BAA8B,CAC9B,mBAAoB,CAarB,yBAtBH,kBAYM,6BAA8B,CAUjC,CJuFD,yBI7GF,kBAgBM,iCAAkC,CAMrC,CJuFD,0BI7GF,kBAoBM,4CAA8C,CAEjD,CCtBH,kBACE,iBAAkB,CAClB,YAAa,CACb,+CAAiD,CACjD,6BAA8B,CAC9B,kBAAmB,CACnB,aAAS,CAAT,QAAS,CACT,YAAa,CAMd,yBAbD,kBAUI,qBAAsB,CACtB,yBAA0B,CAE7B,CCfD,WACE,WAAY,CACZ,eAAgB,CAChB,0CAA2C,CAC3C,qDAA4D,CAJ9D,iBAOI,uDAA8D,CAPlE,wBAWI,wDAA+D,CCXnE,eACE,YAAa,CACb,UAAW,CACX,WAAY,CACZ,kBAAmB,CACnB,0CAA2C,CAC3C,wCAAyC,CAN3C,iBASI,eAAgB,CAChB,gBAAiB,CAVrB,qBAcI,aAAc,CACd,cAAe,CACf,qBAAsB,CACtB,eAAgB,CAChB,kBAAmB,CACnB,cAAe,CAEf,uBAAwB,CArB5B,gDAyBM,aAAc,CACd,kCAAmC,CA1BzC,2CAoCM,aAAc,CACd,kCAAmC,CArCzC,kCAoCM,aAAc,CACd,kCAAmC,CCrCzC,QACE,iBAAkB,CAClB,cAAe,CACf,qBAAsB,CACtB,eAAgB,CAChB,kBAAmB,CACnB,UAAW,CAEX,kBAAoB,CAGpB,0CAA2C,CAC3C,wCACwB,CCb1B,sBDOE,WAAY,CAEZ,cAAe,CAIf,uBCPwB,CAN1B,cAEE,eAAgB,CAEhB,0CAA2C,CAC3C,wCACwB,CAN1B,yBASI,UAAW,CACX,YAAa,CACb,gBAAiB,CAXrB,oBAgBI,sBAAsB,CAhB1B,2BAmBM,qBAAyB,CCnB/B,YACE,eAAiB,CACjB,cAAgB,CAFlB,iBAKI,eAAiB,CCLrB,OACE,WAAY,CACZ,0CAA2C,CAF7C,aAKI,qBAAsB,CCL1B,SACE,WAAY,CAEZ,sBAEwB,CCL1B,kBDEE,YAAa,CAEb,kBAAmB,CACnB,uBCFwB,CAH1B,YAMI,QAAS,CCJb,SACE,YAAa,CACb,2BAA4B,CAF9B,uBAKI,WAAY,CALhB,eASI,iBAAkB,CAClB,YAAa,CACb,6BAA8B,CAC9B,YAAA,CAAA,OAAQ,CA2DT,yBAvEH,eAeM,yBAA0B,CAC1B,cAAU,CAAV,SAAU,CACV,iBAAkB,CAjBxB,0BAoBQ,iBAAkB,CACnB,CArBP,8BA0BQ,cAAe,CA1BvB,2BA+BM,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAjC7B,kCAoCQ,eAAgB,CAChB,eAAgB,CAChB,kBAAoB,CAtC5B,yCA0CQ,YAAa,CACb,YAAQ,CAAR,OAAQ,CACR,eAAiB,CAKlB,yBAjDP,yCA+CU,qBAAsB,CAEzB,CAjDP,oCAoDQ,gBAAiB,CApDzB,sDAuDU,YAAa,CACb,cAAe,CACf,aAAA,CAAA,QAAS,CAzDnB,mEA4DY,sBAAuB,CACvB,eAAgB,CAChB,gBAAiB,CA9D7B,8EAkEY,eAAgB,CCpE5B,eACE,UAAW,CACX,cAAe,CACf,eAAgB,CAChB,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,cAAe,CAEf,wCAAyC,CACzC,uBAAwB,CACxB,oBAAsB,CAXxB,iBAcI,cAAe,CCdnB,aACE,eAAiB,CACjB,aAAc,CAFhB,iBAKI,eAAgB,CALpB,oBAQI,UAAY","file":"main.3d419282.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap);\n:root{--default-border-radius: 7px;--placeholder-opacity: 0.4}html,body,#root{position:relative;min-height:100vh}body{margin:0;padding:0;font-family:\"Nunito Sans\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}\n\n\n#layout{position:relative;min-height:inherit;display:grid;grid-template-columns:minmax(320px, auto);grid-template-rows:minmax(60px, auto) 1fr}#layout header{background-color:var(--bg-element-color)}@media (max-width: 512px){#layout header{padding:0 1rem}}@media (min-width: 512px){#layout header{padding:0 2rem}}@media (min-width: 768px){#layout header{padding:0 3em}}#layout main{background-color:var(--bg-color);color:var(--text-color)}@media (max-width: 512px){#layout main{padding:0 3rem}}@media (min-width: 512px){#layout main{padding:0 2rem}}@media (min-width: 768px){#layout main{padding:0 3em}}\n\n.nav-bar{height:100%;width:100%;display:flex;justify-content:space-between;align-items:center}.nav-bar .banner span{font-size:1.1em;font-weight:bold;color:var(--text-color);cursor:pointer}\n\n.button-flat{background:none;border:none;outline:none;display:flex;align-items:center;justify-content:space-between;font-weight:bold;cursor:pointer;color:var(--text-color)}.button-flat i{margin-right:0.8rem}\n\ni{font-size:1rem;margin:0;padding:0}\n\n.countries{position:relative;display:grid;grid-template-rows:auto 1fr}.countries .cards{display:grid;grid-gap:1.5rem;justify-content:space-between;padding-bottom:1rem}@media (min-width: 512px){.countries .cards{grid-template-columns:1fr 1fr}}@media (min-width: 768px){.countries .cards{grid-template-columns:1fr 1fr 1fr}}@media (min-width: 1024px){.countries .cards{grid-template-columns:repeat(auto-fit, 270px)}}\n\n.controles-header{position:relative;display:grid;grid-template-columns:minmax(300px, 400px) 200px;justify-content:space-between;align-items:center;grid-gap:1rem;gap:1rem;margin:2em 0}@media (max-width: 768px){.controles-header{flex-direction:column;grid-template-columns:1fr}}\n\n.hover-box{height:100%;overflow:hidden;border-radius:var(--default-border-radius);box-shadow:0px 0px 4px 0 rgba(var(--box-shadow-color), 0.1)}.hover-box:hover{box-shadow:0px 0px 4px 2px rgba(var(--box-shadow-color), 0.1)}.hover-box:focus-within{box-shadow:0px 0px 4px 2px rgba(var(--box-shadow-color), 0.25)}\n\n.input-wrapper{display:flex;width:100%;height:100%;align-items:center;border-radius:var(--default-border-radius);background-color:var(--bg-element-color)}.input-wrapper i{margin:0 1.3rem;font-size:1.2rem}.input-wrapper input{flex:1 1 100%;border:inherit;border-radius:inherit;outline:inherit;background:inherit;padding:1rem 0;color:var(--text-color)}.input-wrapper input::-webkit-input-placeholder{color:inherit;opacity:var(--placeholder-opacity)}.input-wrapper input:-ms-input-placeholder{color:inherit;opacity:var(--placeholder-opacity)}.input-wrapper input::placeholder{color:inherit;opacity:var(--placeholder-opacity)}\n\n.select{position:relative;border:inherit;border-radius:inherit;outline:inherit;background:inherit;width:100%;height:100%;padding:0.8rem 1rem;cursor:pointer;border-radius:var(--default-border-radius);background-color:var(--bg-element-color);color:var(--text-color)}\n\n.card-wrapper{height:100%;overflow:hidden;cursor:pointer;border-radius:var(--default-border-radius);background-color:var(--bg-element-color);color:var(--text-color)}.card-wrapper .image-top{width:100%;height:160px;object-fit:cover}.card-wrapper .body{padding:0 1.5rem;padding-bottom:0.8rem}.card-wrapper .body .title{margin:0.8rem 0 1.3rem 0}\n\n.decription{font-size:0.8rem;line-height:0.5}.decription .key{font-weight:bold}\n\n.scale{height:100%;border-radius:var(--default-border-radius)}.scale:hover{transform:scale(1.02)}\n\n.loading{height:100%;display:flex;justify-content:center;align-items:center;color:var(--text-color)}\n\n.no-data{display:flex;align-items:center;color:var(--text-color)}.no-data h4{margin:0}\n\n.country{display:grid;grid-template-rows:auto 1fr}.country .hover-custom{width:105px}.country .data{position:relative;display:grid;grid-template-columns:1fr 1fr;grid-gap:3em;gap:3em}@media (max-width: 768px){.country .data{grid-template-columns:1fr;grid-gap:1.3em;gap:1.3em;margin-bottom:2em}.country .data .left-data{text-align:center}}.country .data .left-data img{max-width:100%}.country .data .right-data{display:flex;flex-direction:column;justify-content:center}.country .data .right-data .title{font-size:1.3em;font-weight:700;margin-bottom:0.8em}.country .data .right-data .descriptions{display:flex;grid-gap:1em;gap:1em;font-size:0.8rem}@media (max-width: 768px){.country .data .right-data .descriptions{flex-direction:column}}.country .data .right-data .borders{margin-top:1.3em}.country .data .right-data .borders .border-countries{display:flex;flex-wrap:wrap;grid-gap:1rem;gap:1rem}.country .data .right-data .borders .border-countries .btn-borders{justify-content:center;border-radius:0;padding:8px 12px}.country .data .right-data .borders .border-countries .hover-border-countries{border-radius:0}\n\n.button-strech{width:100%;border:inherit;outline:inherit;display:flex;align-items:center;justify-content:space-between;cursor:pointer;background-color:var(--bg-element-color);color:var(--text-color);padding:0.5rem 1.7rem}.button-strech i{font-size:1rem}\n\n.description{font-size:0.8rem;line-height:2}.description .id{font-weight:600}.description .value{opacity:0.8}\n\n","@import url(\"https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap\");\r\n\r\n:root {\r\n  /* \r\n    ** GENERATED VARIABLES BY THEME CONTEXT\r\n    **  --bg-color\r\n    **  --bg-element-color\r\n    **  --bg-input-color\r\n    **  --text-color\r\n    **  --box-shadow-color\r\n  */\r\n  --default-border-radius: 7px;\r\n  --placeholder-opacity: 0.4;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#root {\r\n  position: relative;\r\n  min-height: 100vh;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: \"Nunito Sans\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n","@import \"../../scss/breakpoints\";\r\n\r\n#layout {\r\n  position: relative;\r\n  min-height: inherit;\r\n  display: grid;\r\n  grid-template-columns: minmax(320px, auto);\r\n  grid-template-rows: minmax(60px, auto) 1fr;\r\n\r\n  & header {\r\n    background-color: var(--bg-element-color);\r\n\r\n    @include media(\"<=phone-big\") {\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    @include media(\">=phone-big\") {\r\n      padding: 0 2rem;\r\n    }\r\n\r\n    @include media(\">=tablet\") {\r\n      padding: 0 3em;\r\n    }\r\n  }\r\n\r\n  & main {\r\n    background-color: var(--bg-color);\r\n    color: var(--text-color);\r\n\r\n    @include media(\"<=phone-big\") {\r\n      padding: 0 3rem;\r\n    }\r\n\r\n    @include media(\">=phone-big\") {\r\n      padding: 0 2rem;\r\n    }\r\n\r\n    @include media(\">=tablet\") {\r\n      padding: 0 3em;\r\n    }\r\n  }\r\n}\r\n","$breakpoints: (\r\n  \"phone\": 360px,\r\n  \"phone-big\": 512px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1024px,\r\n  \"LGdesktop\": 1366px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\",\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\",\r\n  ),\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1,\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n\r\n/**\r\n*\r\n* Testing\r\n*\r\n**/\r\n",".nav-bar {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  & .banner {\r\n    & span {\r\n      font-size: 1.1em;\r\n      font-weight: bold;\r\n      color: var(--text-color);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n",".button-flat {\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  color: var(--text-color);\r\n\r\n  & i {\r\n    margin-right: 0.8rem;\r\n  }\r\n}\r\n","i {\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n","@import \"../../../scss/breakpoints\";\r\n\r\n.countries {\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n\r\n  & .cards {\r\n    display: grid;\r\n    grid-gap: 1.5rem;\r\n    justify-content: space-between;\r\n    padding-bottom: 1rem;\r\n\r\n    @include media(\">=phone-big\") {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @include media(\">=tablet\") {\r\n      grid-template-columns: 1fr 1fr 1fr;\r\n    }\r\n\r\n    @include media(\">=desktop\") {\r\n      grid-template-columns: repeat(auto-fit, 270px);\r\n    }\r\n  }\r\n}\r\n","@import \"../../../scss/breakpoints\";\r\n\r\n.controles-header {\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: minmax(300px, 400px) 200px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin: 2em 0;\r\n\r\n  @include media(\"<=tablet\") {\r\n    flex-direction: column;\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n",".hover-box {\r\n  height: 100%;\r\n  overflow: hidden;\r\n  border-radius: var(--default-border-radius);\r\n  box-shadow: 0px 0px 4px 0 rgba(var(--box-shadow-color), 0.1);\r\n\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px 2px rgba(var(--box-shadow-color), 0.1);\r\n  }\r\n\r\n  &:focus-within {\r\n    box-shadow: 0px 0px 4px 2px rgba(var(--box-shadow-color), 0.25);\r\n  }\r\n}\r\n",".input-wrapper {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  border-radius: var(--default-border-radius);\r\n  background-color: var(--bg-element-color);\r\n\r\n  & i {\r\n    margin: 0 1.3rem;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  & input {\r\n    flex: 1 1 100%;\r\n    border: inherit;\r\n    border-radius: inherit;\r\n    outline: inherit;\r\n    background: inherit;\r\n    padding: 1rem 0;\r\n\r\n    color: var(--text-color);\r\n\r\n    &::-webkit-input-placeholder {\r\n      /* Chrome/Opera/Safari */\r\n      color: inherit;\r\n      opacity: var(--placeholder-opacity);\r\n    }\r\n\r\n    &::-moz-placeholder {\r\n      /* Firefox 19+ */\r\n      color: inherit;\r\n      opacity: var(--placeholder-opacity);\r\n    }\r\n\r\n    &::placeholder {\r\n      color: inherit;\r\n      opacity: var(--placeholder-opacity);\r\n    }\r\n  }\r\n}\r\n",".select {\r\n  position: relative;\r\n  border: inherit;\r\n  border-radius: inherit;\r\n  outline: inherit;\r\n  background: inherit;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0.8rem 1rem;\r\n  cursor: pointer;\r\n\r\n  border-radius: var(--default-border-radius);\r\n  background-color: var(--bg-element-color);\r\n  color: var(--text-color);\r\n}\r\n",".card-wrapper {\r\n  height: 100%;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  border-radius: var(--default-border-radius);\r\n  background-color: var(--bg-element-color);\r\n  color: var(--text-color);\r\n\r\n  & .image-top {\r\n    width: 100%;\r\n    height: 160px;\r\n    object-fit: cover;\r\n  }\r\n\r\n  & .body {\r\n    padding: 0 1.5rem;\r\n    padding-bottom: 0.8rem;\r\n\r\n    & .title {\r\n      margin: 0.8rem 0 1.3rem 0;\r\n    }\r\n  }\r\n}\r\n",".decription {\r\n  font-size: 0.8rem;\r\n  line-height: 0.5;\r\n\r\n  & .key {\r\n    font-weight: bold;\r\n  }\r\n\r\n  & .text {\r\n  }\r\n}\r\n",".scale {\r\n  height: 100%;\r\n  border-radius: var(--default-border-radius);\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n}\r\n",".loading {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: var(--text-color);\r\n}\r\n",".no-data {\r\n  display: flex;\r\n  align-items: center;\r\n  color: var(--text-color);\r\n\r\n  & h4 {\r\n    margin: 0;\r\n  }\r\n}\r\n","@import \"../../../scss/breakpoints\";\r\n\r\n.country {\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n\r\n  & .hover-custom {\r\n    width: 105px;\r\n  }\r\n\r\n  & .data {\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 3em;\r\n\r\n    @include media(\"<=tablet\") {\r\n      grid-template-columns: 1fr;\r\n      gap: 1.3em;\r\n      margin-bottom: 2em;\r\n\r\n      & .left-data {\r\n        text-align: center;\r\n      }\r\n    }\r\n\r\n    & .left-data {\r\n      & img {\r\n        max-width: 100%;\r\n      }\r\n    }\r\n\r\n    & .right-data {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      & .title {\r\n        font-size: 1.3em;\r\n        font-weight: 700;\r\n        margin-bottom: 0.8em;\r\n      }\r\n\r\n      & .descriptions {\r\n        display: flex;\r\n        gap: 1em;\r\n        font-size: 0.8rem;\r\n\r\n        @include media(\"<=tablet\") {\r\n          flex-direction: column;\r\n        }\r\n      }\r\n\r\n      & .borders {\r\n        margin-top: 1.3em;\r\n\r\n        & .border-countries {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 1rem;\r\n\r\n          .btn-borders {\r\n            justify-content: center;\r\n            border-radius: 0;\r\n            padding: 8px 12px;\r\n          }\r\n\r\n          & .hover-border-countries {\r\n            border-radius: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",".button-strech {\r\n  width: 100%;\r\n  border: inherit;\r\n  outline: inherit;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n\r\n  background-color: var(--bg-element-color);\r\n  color: var(--text-color);\r\n  padding: 0.5rem 1.7rem;\r\n\r\n  & i {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n",".description {\r\n  font-size: 0.8rem;\r\n  line-height: 2;\r\n\r\n  & .id {\r\n    font-weight: 600;\r\n  }\r\n  & .value {\r\n    opacity: 0.8;\r\n  }\r\n}\r\n"]}