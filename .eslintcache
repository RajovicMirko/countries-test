[{"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\index.js":"1","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\reportWebVitals.js":"2","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\App.jsx":"3","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\router\\router.js":"4","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\usePages\\index.js":"5","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\usePages\\useConfig.js":"6","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\usePages\\functions.js":"7","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\pages\\Countries\\Countries.jsx":"8","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\pages\\Error404\\Error404.jsx":"9","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\contexts\\Theme\\Theme.js":"10","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Layout\\Layout.jsx":"11","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Layout\\NavBar\\NavBar.jsx":"12","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\pages\\Country\\Country.jsx":"13","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\utils\\constants.js":"14","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Button\\Flat\\Flat.jsx":"15","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Icon\\Icon.jsx":"16","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Input\\Text\\Text.jsx":"17","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Select\\Select.jsx":"18","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\effects\\HoverBox\\HoverBox.jsx":"19","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useCountries\\index.js":"20","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\effects\\Scale\\Scale.jsx":"21","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\utils\\helpers.js":"22","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Loading\\Loading.jsx":"23","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\NoData\\NoData.jsx":"24","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\ControlesHeader\\ControlesHeader.jsx":"25","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\Description\\Description.jsx":"26","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\Card\\Card.jsx":"27","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Button\\Strech\\Strech.jsx":"28","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\DescriptionCard\\DescriptionCard.jsx":"29","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useApi\\useApi.js":"30","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useApi\\funtions.js":"31","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useLocalStorage\\useLocalStorage.js":"32"},{"size":500,"mtime":1610614421862,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":373,"mtime":1610624822474,"results":"36","hashOfConfig":"34"},{"size":526,"mtime":1610615145526,"results":"37","hashOfConfig":"34"},{"size":400,"mtime":1611560673669,"results":"38","hashOfConfig":"34"},{"size":1018,"mtime":1611561805755,"results":"39","hashOfConfig":"34"},{"size":148,"mtime":1610615258038,"results":"40","hashOfConfig":"34"},{"size":2856,"mtime":1611561723773,"results":"41","hashOfConfig":"34"},{"size":159,"mtime":1610616058699,"results":"42","hashOfConfig":"34"},{"size":1950,"mtime":1611562986746,"results":"43","hashOfConfig":"34"},{"size":275,"mtime":1610862460918,"results":"44","hashOfConfig":"34"},{"size":1032,"mtime":1610862460919,"results":"45","hashOfConfig":"34"},{"size":3927,"mtime":1611561717624,"results":"46","hashOfConfig":"34"},{"size":597,"mtime":1611562781500,"results":"47","hashOfConfig":"34"},{"size":551,"mtime":1610862460921,"results":"48","hashOfConfig":"34"},{"size":204,"mtime":1610862460925,"results":"49","hashOfConfig":"34"},{"size":801,"mtime":1610862460926,"results":"50","hashOfConfig":"34"},{"size":873,"mtime":1610864389782,"results":"51","hashOfConfig":"34"},{"size":304,"mtime":1610709233621,"results":"52","hashOfConfig":"34"},{"size":4746,"mtime":1610863145017,"results":"53","hashOfConfig":"34"},{"size":210,"mtime":1610663912189,"results":"54","hashOfConfig":"34"},{"size":214,"mtime":1610862460940,"results":"55","hashOfConfig":"34"},{"size":294,"mtime":1610667845757,"results":"56","hashOfConfig":"34"},{"size":298,"mtime":1610699627306,"results":"57","hashOfConfig":"34"},{"size":308,"mtime":1610862187970,"results":"58","hashOfConfig":"34"},{"size":504,"mtime":1610862187971,"results":"59","hashOfConfig":"34"},{"size":1069,"mtime":1610862461010,"results":"60","hashOfConfig":"34"},{"size":577,"mtime":1610862460922,"results":"61","hashOfConfig":"34"},{"size":372,"mtime":1610862460910,"results":"62","hashOfConfig":"34"},{"size":557,"mtime":1610862460935,"results":"63","hashOfConfig":"34"},{"size":359,"mtime":1610862460934,"results":"64","hashOfConfig":"34"},{"size":426,"mtime":1611562892210,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"4e8c2r",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\index.js",[],["135","136"],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\reportWebVitals.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\App.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\router\\router.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\usePages\\index.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\usePages\\useConfig.js",["137"],"// pages\r\nimport Error404 from \"app/pages/Error404\";\r\nimport Countries from \"app/pages/Countries\";\r\nimport Country from \"app/pages/Country\";\r\n\r\nconst Config = () => {\r\n  const pages = [\r\n    {\r\n      path: \"/\",\r\n      name: \"countries-home\",\r\n      component: Countries,\r\n    },\r\n    {\r\n      path: \"/error404\",\r\n      name: \"error404\",\r\n      label: \"Error404\",\r\n      component: Error404,\r\n    },\r\n    {\r\n      path: \"/countries-test\",\r\n      name: \"countries\",\r\n      component: Countries,\r\n      isNavLink: true,\r\n    },\r\n    {\r\n      path: \"/countries-test/country/:id\",\r\n      name: \"country\",\r\n      component: Country,\r\n      isNavLink: true,\r\n    },\r\n  ];\r\n\r\n  const generatePath = ({ pageName, props }) => {\r\n    let basePath = pages.find((p) => p.name === pageName).path;\r\n\r\n    Object.keys(props).map((k) => {\r\n      const paramStr = `:${k}`;\r\n      basePath = basePath.replace(paramStr, props[k]);\r\n    });\r\n\r\n    return basePath;\r\n  };\r\n\r\n  return { pages, generatePath };\r\n};\r\n\r\nexport default Config;\r\n","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\usePages\\functions.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\pages\\Countries\\Countries.jsx",["138"],"import \"./Countries.scss\";\r\nimport React, { useEffect } from \"react\";\r\nimport usePages from \"hooks/usePages\";\r\nimport useCountries from \"hooks/useCountries\";\r\nimport { formatNumber } from \"utils/helpers\";\r\n// components\r\nimport ControlesHeader from \"components/Countries/ControlesHeader\";\r\nimport HoverBox from \"components/global/effects/HoverBox\";\r\nimport InputText from \"components/global/Input/Text\";\r\nimport Select from \"components/global/Select\";\r\nimport CountryCard from \"components/Countries/Card\";\r\nimport Loading from \"components/global/Loading\";\r\nimport NoData from \"components/global/NoData\";\r\n\r\nfunction Countries(props) {\r\n  const { generatePath } = usePages();\r\n  const {\r\n    isLoading,\r\n    countries,\r\n    regionOptions,\r\n    setRegionFilterValue,\r\n    setSearchValue,\r\n    regionFilterValue,\r\n    fetchCountries,\r\n  } = useCountries();\r\n\r\n  useEffect(() => {\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    setSearchValue(value);\r\n  };\r\n\r\n  const handleFilter = (value) => {\r\n    if (value) setRegionFilterValue(value);\r\n  };\r\n\r\n  const handleCardClick = (country3code) => {\r\n    const url = generatePath({\r\n      pageName: \"country\",\r\n      props: {\r\n        id: country3code,\r\n      },\r\n    });\r\n    props.history.push(url);\r\n  };\r\n\r\n  switch (true) {\r\n    case isLoading:\r\n      return <Loading text=\"Loading countries...\" />;\r\n\r\n    default:\r\n      return (\r\n        <section className=\"countries\">\r\n          <ControlesHeader>\r\n            <HoverBox>\r\n              <InputText\r\n                placeholder=\"Search for a country...\"\r\n                icon=\"fas fa-search\"\r\n                onChange={handleSearch}\r\n              />\r\n            </HoverBox>\r\n\r\n            <HoverBox>\r\n              <Select\r\n                defaultText=\"Filter by Region\"\r\n                value={regionFilterValue}\r\n                options={regionOptions}\r\n                onChange={handleFilter}\r\n              />\r\n            </HoverBox>\r\n          </ControlesHeader>\r\n\r\n          {!!countries.length && (\r\n            <section className=\"cards\">\r\n              {countries &&\r\n                countries.map((country) => (\r\n                  <CountryCard\r\n                    key={country.alpha3Code}\r\n                    id={country.alpha3Code}\r\n                    title={country.name}\r\n                    img={country.flag}\r\n                    description={{\r\n                      Population: formatNumber(country.population) || \"N/A\",\r\n                      Region: country.region || \"N/A\",\r\n                      Capital: country.capital || \"N/A\",\r\n                    }}\r\n                    onClick={handleCardClick}\r\n                  />\r\n                ))}\r\n            </section>\r\n          )}\r\n\r\n          {!countries.length && <NoData />}\r\n        </section>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\pages\\Error404\\Error404.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\contexts\\Theme\\Theme.js",["139"],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Layout\\Layout.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Layout\\NavBar\\NavBar.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\app\\pages\\Country\\Country.jsx",["140"],"import \"./Country.scss\";\r\nimport React, { useEffect } from \"react\";\r\nimport usePages from \"hooks/usePages\";\r\nimport useCountries from \"hooks/useCountries\";\r\nimport { formatNumber } from \"utils/helpers\";\r\n// components\r\nimport ControlesHeader from \"components/Countries/ControlesHeader\";\r\nimport ButtonStrech from \"components/global/Button/Strech\";\r\nimport Loading from \"components/global/Loading\";\r\nimport HoverBox from \"components/global/effects/HoverBox\";\r\nimport Description from \"components/Countries/Description\";\r\n\r\nfunction Country(props) {\r\n  const alpha3CodeParamsId = props.match.params.id;\r\n  const { generatePath } = usePages();\r\n  const {\r\n    isLoading,\r\n    country,\r\n    borderCountries,\r\n    fetchByAlpha3Code,\r\n  } = useCountries();\r\n\r\n  // init fetch country data\r\n  useEffect(() => {\r\n    fetchByAlpha3Code(alpha3CodeParamsId);\r\n  }, [alpha3CodeParamsId]);\r\n\r\n  const handleGoBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const handleBorderCountryClick = (alpha3Code) => {\r\n    const url = generatePath({\r\n      pageName: \"country\",\r\n      props: {\r\n        id: alpha3Code,\r\n      },\r\n    });\r\n    props.history.push(url);\r\n  };\r\n\r\n  const topLevelDomain = country.topLevelDomain\r\n    ? country.topLevelDomain[0]\r\n    : \"\";\r\n\r\n  const currencies =\r\n    country.currencies && country.currencies.map((cur) => cur.code).join(\", \");\r\n\r\n  const languages =\r\n    country.languages && country.languages.map((lng) => lng.name).join(\", \");\r\n\r\n  const renderBorderCountries = (\r\n    <Description className=\"borders\" id=\"Border Countries\">\r\n      <section className=\"border-countries\">\r\n        {borderCountries.map((border) => (\r\n          <HoverBox key={border.alpha3Code} className=\"hover-border-countries\">\r\n            <ButtonStrech\r\n              id={border.alpha3Code}\r\n              className=\"btn-borders\"\r\n              onClick={handleBorderCountryClick}\r\n            >\r\n              {border.name}\r\n            </ButtonStrech>\r\n          </HoverBox>\r\n        ))}\r\n      </section>\r\n    </Description>\r\n  );\r\n\r\n  switch (true) {\r\n    case isLoading:\r\n      return <Loading text=\"Loading country...\" />;\r\n    default:\r\n      return (\r\n        country && (\r\n          <section className=\"country\">\r\n            <ControlesHeader>\r\n              <HoverBox className=\"hover-custom\">\r\n                <ButtonStrech icon=\"fas fa-arrow-left\" onClick={handleGoBack}>\r\n                  Back\r\n                </ButtonStrech>\r\n              </HoverBox>\r\n            </ControlesHeader>\r\n            <section className=\"data\">\r\n              <section className=\"left-data\">\r\n                <img src={country.flag} alt={country.alpha3Code} />\r\n              </section>\r\n              <section className=\"right-data\">\r\n                <section className=\"title\">{country.name}</section>\r\n\r\n                <section className=\"descriptions\">\r\n                  <section className=\"left\">\r\n                    <Description id=\"Native Name\" value={country.nativeName} />\r\n                    <Description\r\n                      id=\"Population\"\r\n                      value={formatNumber(country.population)}\r\n                    />\r\n                    <Description id=\"Region\" value={country.region} />\r\n                    <Description id=\"Sub Region\" value={country.subregion} />\r\n                    <Description id=\"Capital\" value={country.capital} />\r\n                  </section>\r\n                  <section className=\"right\">\r\n                    <Description id=\"Top Level Domain\" value={topLevelDomain} />\r\n                    <Description id=\"Currencies\" value={currencies} />\r\n                    <Description id=\"Languages\" value={languages} />\r\n                  </section>\r\n                </section>\r\n\r\n                {!!borderCountries.length && renderBorderCountries}\r\n              </section>\r\n            </section>\r\n          </section>\r\n        )\r\n      );\r\n  }\r\n}\r\n\r\nexport default Country;\r\n","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\utils\\constants.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Button\\Flat\\Flat.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Icon\\Icon.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Input\\Text\\Text.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Select\\Select.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\effects\\HoverBox\\HoverBox.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useCountries\\index.js",["141","142","143","144"],"import { useState, useEffect } from \"react\";\r\nimport useApi from \"hooks/useApi\";\r\nimport {\r\n  COUNTRIES_API_ENDPOINT,\r\n  COUNTRIES_BY_REGION_API_ENDPOINT,\r\n  COUNTRIES_BY_3_CODE_API_ENDPOINT,\r\n} from \"utils/constants\";\r\n\r\nconst _INIT_ERROR = {\r\n  is: false,\r\n  message: \"\",\r\n};\r\n\r\nfunction useCountries() {\r\n  //#region Hooks\r\n  const { http, getCountriesQueryUrl } = useApi();\r\n  //#endregion Hooks\r\n\r\n  //#region State\r\n  const [_countries, _setCountries] = useState([]);\r\n  const [_searchValue, setSearchValue] = useState(\"\");\r\n  const [_regionFilterValue, setRegionFilterValue] = useState(\"\");\r\n\r\n  const [isLoading, _setIsLoading] = useState(false);\r\n  const [error, _setError] = useState(_INIT_ERROR);\r\n  const [country, _setCountry] = useState({});\r\n  const [borderCountries, _setBorderCountries] = useState([]);\r\n  const [filteredCountries, _setFilteredCountries] = useState([]);\r\n  const [regionOptions, _setRegionOptions] = useState([]);\r\n  //#endregion State\r\n\r\n  //#region Private functions\r\n  const _startWork = () => {\r\n    _setIsLoading(true);\r\n    _setError(_INIT_ERROR);\r\n\r\n    return true;\r\n  };\r\n\r\n  const _endWork = (error = null) => {\r\n    _setIsLoading(false);\r\n\r\n    if (error) {\r\n      _setError({\r\n        ..._INIT_ERROR,\r\n        is: true,\r\n        message: error.message,\r\n      });\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const _setInitState = (data) => {\r\n    _setCountries(data);\r\n    _setFilteredCountries(data);\r\n  };\r\n\r\n  const _fetchBorderCountries = async () => {\r\n    _startWork();\r\n    if (!country.borders || !country.borders.length) {\r\n      return _endWork();\r\n    }\r\n\r\n    try {\r\n      const query = {\r\n        codes: country.borders.join(\";\"),\r\n      };\r\n      const url = getCountriesQueryUrl(COUNTRIES_BY_3_CODE_API_ENDPOINT, query);\r\n\r\n      const result = await http.get(url);\r\n      _setBorderCountries(result.data);\r\n      return _endWork();\r\n    } catch (error) {\r\n      return _endWork(error);\r\n    }\r\n  };\r\n  // When country is changed call _fetchBorderCountries\r\n  useEffect(() => _fetchBorderCountries(), [country]);\r\n\r\n  const _prepareRegionOptions = (allCountries) => {\r\n    const regionsUnique = [\r\n      ...new Set(allCountries.map((country) => country.region)),\r\n    ].filter((region) => !!region);\r\n\r\n    const optionsArray = regionsUnique.map((region) => ({\r\n      key: region.toLowerCase(),\r\n      value: region,\r\n    }));\r\n\r\n    _setRegionOptions(optionsArray);\r\n  };\r\n\r\n  // Filter logic ///////////////////////////////////////////////////\r\n  const _fetchRegion = async () => {\r\n    _startWork();\r\n    if (!_regionFilterValue) {\r\n      return _endWork();\r\n    }\r\n\r\n    const url = `${COUNTRIES_BY_REGION_API_ENDPOINT}/${_regionFilterValue}`;\r\n    const result = await http.get(url);\r\n    _setInitState(result.data);\r\n    _endWork();\r\n  };\r\n  // When _regionFilterValue is changed call _fetchRegion\r\n  useEffect(() => _fetchRegion(), [_regionFilterValue]);\r\n\r\n  // Search logic //////////////////////////////////////////////////\r\n  const _searchCountries = () => {\r\n    if (!_searchValue) _setFilteredCountries(_countries);\r\n\r\n    const pattern = /^(<|<=|>|>=)[0-9]+$/;\r\n    const lowerSearchValue = _searchValue.trim().toLowerCase();\r\n    const filterResult = _countries.filter((country) => {\r\n      return (\r\n        country.name.toLowerCase().indexOf(lowerSearchValue) !== -1 ||\r\n        country.capital.toLowerCase().indexOf(lowerSearchValue) !== -1 ||\r\n        country.region.toLowerCase().indexOf(lowerSearchValue) !== -1 ||\r\n        (pattern.test(_searchValue) &&\r\n          eval(country.population + _searchValue) &&\r\n          country.population > 0)\r\n      );\r\n    });\r\n\r\n    _setFilteredCountries(filterResult);\r\n  };\r\n  // When _searchValue is changed call _searchCountries\r\n  useEffect(() => _searchCountries(), [_searchValue]);\r\n  //#endregion Private functions\r\n\r\n  //#region Public functions\r\n  const fetchCountries = async () => {\r\n    _startWork();\r\n    const result = await http.get(COUNTRIES_API_ENDPOINT);\r\n    _prepareRegionOptions(result.data);\r\n    _setInitState(result.data);\r\n    _endWork();\r\n  };\r\n\r\n  const fetchByAlpha3Code = async (code3char) => {\r\n    _startWork();\r\n    const url = `${COUNTRIES_BY_3_CODE_API_ENDPOINT}/${code3char}`;\r\n    const result = await http.get(url);\r\n    _setCountry(result.data);\r\n    _endWork();\r\n  };\r\n  //#endregion Public functions\r\n\r\n  //#region useApi result\r\n  return {\r\n    isLoading,\r\n    error,\r\n    countries: filteredCountries,\r\n    country,\r\n    borderCountries,\r\n    regionOptions,\r\n    setSearchValue,\r\n    setRegionFilterValue,\r\n    regionFilterValue: _regionFilterValue,\r\n    fetchCountries,\r\n    fetchByAlpha3Code,\r\n  };\r\n  //#endregion useApi result\r\n}\r\n\r\nexport default useCountries;\r\n","C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\effects\\Scale\\Scale.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\utils\\helpers.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Loading\\Loading.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\NoData\\NoData.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\ControlesHeader\\ControlesHeader.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\Description\\Description.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\Card\\Card.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\global\\Button\\Strech\\Strech.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\components\\Countries\\DescriptionCard\\DescriptionCard.jsx",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useApi\\useApi.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useApi\\funtions.js",[],"C:\\Users\\Rajovici\\Desktop\\Testovi za posao\\Frontend\\Davies Meyer\\countries-test\\src\\hooks\\useLocalStorage\\useLocalStorage.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":36,"column":32,"nodeType":"151","messageId":"152","endLine":36,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":29,"column":6,"nodeType":"155","endLine":29,"endColumn":8,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":50,"column":6,"nodeType":"155","endLine":50,"endColumn":8,"suggestions":"158"},{"ruleId":"153","severity":1,"message":"159","line":26,"column":6,"nodeType":"155","endLine":26,"endColumn":26,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"161","line":81,"column":44,"nodeType":"155","endLine":81,"endColumn":53,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":109,"column":35,"nodeType":"155","endLine":109,"endColumn":55,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":123,"column":11,"nodeType":"167","messageId":"168","endLine":123,"endColumn":15},{"ruleId":"153","severity":1,"message":"169","line":131,"column":39,"nodeType":"155","endLine":131,"endColumn":53,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCountries'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has missing dependencies: 'getLs', 'hasLs', and 'setLs'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'fetchByAlpha3Code'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: '_fetchBorderCountries'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has a missing dependency: '_fetchRegion'. Either include it or remove the dependency array.",["177"],"no-eval","eval can be harmful.","CallExpression","unexpected","React Hook useEffect has a missing dependency: '_searchCountries'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [fetchCountries]",{"range":"191","text":"192"},"Update the dependencies array to be: [getLs, hasLs, setLs]",{"range":"193","text":"194"},"Update the dependencies array to be: [alpha3CodeParamsId, fetchByAlpha3Code]",{"range":"195","text":"196"},"Update the dependencies array to be: [_fetchBorderCountries, country]",{"range":"197","text":"198"},"Update the dependencies array to be: [_fetchRegion, _regionFilterValue]",{"range":"199","text":"200"},"Update the dependencies array to be: [_searchCountries, _searchValue]",{"range":"201","text":"202"},[906,908],"[fetchCountries]",[1373,1375],"[getLs, hasLs, setLs]",[854,874],"[alpha3CodeParamsId, fetchByAlpha3Code]",[2079,2088],"[_fetchBorderCountries, country]",[2917,2937],"[_fetchRegion, _regionFilterValue]",[3808,3822],"[_searchCountries, _searchValue]"]